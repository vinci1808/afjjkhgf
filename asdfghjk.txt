IDENTIFICATION DIVISION.
PROGRAM-ID. P01AP04.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  WS-RESP-CODE      PIC S9(08) COMP VALUE ZERO.
01  PARA-TABLE                        VALUE SPACES.
    03  PARA-NAME     PIC X(16) OCCURS 12 TIMES.
01  PARA-SUB          PIC 9(02) VALUE ZERO.
01  WS-CA.
    03  WS-PROCESS-FLAG      PIC X(01) VALUE SPACES.
        88  PROCESS-KEYMAP             VALUE '1'.
        88  PROCESS-ADD                VALUE '2'.
        88  PROCESS-UPD-DEL            VALUE '3'.
        88  PROCESS-DETMAP             VALUE '2', '3'.
    03  WS-EMP-ID            PIC X(05) VALUE SPACES.
    COPY P01AS04.
    COPY DFHAID.
    COPY DFHBMSCA.
    COPY EMPREC.
01  WS-DATE-TIME             PIC S9(15) COMP-3 VALUE ZERO.
01  WS-DOB.
    03  WS-DOB-YY            PIC 9(04) VALUE ZERO.
    03  WS-DOB-MM            PIC 9(02) VALUE ZERO.
    03  WS-DOB-DD            PIC 9(02) VALUE ZERO.
01  WS-SAL                   PIC 9(05)V99 VALUE ZERO.
01  WS-SALO                  PIC ZZ,ZZ9.99 VALUE ZERO.
01  WS-AMOUNT                PIC 9(05)V99 VALUE ZERO.
01  FILLER  REDEFINES  WS-AMOUNT.
    03  WS-AMT-RS            PIC 9(05).
    03  WS-AMT-PS            PIC 9(02).
01  WS-VALID-FLAG            PIC X(01) VALUE 'N'.
    88  VALID-DATA                     VALUE 'Y'.
LINKAGE SECTION.
01  DFHCOMMAREA  PIC X(06).
PROCEDURE DIVISION.
MAIN-PARA.
    IF EIBCALEN = ZERO
       PERFORM FIRST-PARA
    ELSE
       MOVE DFHCOMMAREA TO WS-CA
       PERFORM NEXT-PARA THRU NEXT-PARA-X
    END-IF.
END-PARA.
    EXEC CICS RETURN
         TRANSID('P01D')
         COMMAREA(WS-CA)
    END-EXEC.
FIRST-PARA.
    MOVE LOW-VALUES TO KEYMAPO
    PERFORM SEND-FIRST-MAP.
SEND-FIRST-MAP.
    PERFORM DATE-TIME-PARA.
    PERFORM SEND-KEY-MAP.
    SET PROCESS-KEYMAP TO TRUE.
SEND-KEY-MAP.
    MOVE -1 TO ID1L
    EXEC CICS SEND
        MAP('KEYMAP')
        MAPSET('P01AS04')
        FROM(KEYMAPO)
        CURSOR
        ERASE
    END-EXEC.
NEXT-PARA.
    EVALUATE TRUE
       WHEN PROCESS-KEYMAP
          PERFORM PROCESS-KEYMAP-PARA
       WHEN PROCESS-DETMAP
          PERFORM PROCESS-DETMAP-PARA
    END-EVALUATE.
SEND-PARA.
    EVALUATE TRUE
       WHEN PROCESS-KEYMAP
          PERFORM SEND-KEY-MAP
       WHEN PROCESS-DETMAP
          PERFORM SEND-DETAIL-MAP
    END-EVALUATE.
NEXT-PARA-X.
    EXIT.
PROCESS-KEYMAP-PARA.
    EVALUATE EIBAID
       WHEN DFHENTER
          PERFORM RECEIVE-PROCESS-KEYMAP
       WHEN DFHPF3
          EXEC CICS XCTL
             PROGRAM('P01AP02')
          END-EXEC
       WHEN OTHER
          MOVE 'INVALID KEY PRESSED' TO MSG1O
    END-EVALUATE.
RECEIVE-PROCESS-KEYMAP.
    PERFORM RECEIVE-KEY-MAP
    IF ID1L = ZERO OR ID1I = SPACES
       MOVE 'PLEASE ENTER AN EMPLOYEE ID' TO MSG1O
    ELSE
       PERFORM READ-EMPLOYEE
    END-IF.
RECEIVE-KEY-MAP.
    EXEC CICS RECEIVE
        MAP('KEYMAP')
        MAPSET('P01AS04')
        INTO(KEYMAPI)
    END-EXEC.
READ-EMPLOYEE.
    MOVE LOW-VALUES TO DETMAPO
    MOVE ID1I TO WS-EMP-ID, ID2O
    EXEC CICS READ
        FILE('P01AFILE')
        RIDFLD(WS-EMP-ID)
        INTO(MASTER-RECORD)
        RESP(WS-RESP-CODE)
    END-EXEC.
    EVALUATE WS-RESP-CODE
        WHEN DFHRESP(NORMAL)
           MOVE EMP-NAME  TO NAMEO
           MOVE EMP-LOC   TO LOCO
           MOVE EMP-TECH  TO TECHO
           MOVE EMP-DOB(1:4) TO DOBYYO
           MOVE EMP-DOB(5:2) TO DOBMMO
           MOVE EMP-DOB(7:2) TO DOBDDO
           MOVE EMP-EARN  TO WS-AMOUNT
           MOVE WS-AMT-RS TO EARNRSO
           MOVE WS-AMT-PS TO EARNPSO
           MOVE EMP-DEDN  TO WS-AMOUNT
           MOVE WS-AMT-RS TO DEDNRSO
           MOVE WS-AMT-PS TO DEDNPSO
           COMPUTE WS-SAL = EMP-EARN - EMP-DEDN
           MOVE WS-SAL    TO WS-SALO
           MOVE WS-SALO  TO SALO
           MOVE 'UPDATE / DELETE' TO MODEO
           MOVE -1                TO NAMEL
           SET PROCESS-UPD-DEL TO TRUE
           MOVE DFHBMDAR TO LABEL1A
           MOVE DFHBMPRO TO LABEL2A
        WHEN DFHRESP(NOTFND)
           MOVE -1                TO NAMEL
           MOVE SPACES TO NAMEO, LOCO, TECHO,
                DOBYYO, DOBMMO, DOBDDO, SALO,
                EARNRSO, EARNPSO, DEDNRSO, DEDNPSO
           MOVE ZERO  TO WS-SAL
           MOVE WS-SALO  TO SALO
           MOVE 'ADD EMPLOYEE'  TO MODEO
           SET PROCESS-ADD TO TRUE
           MOVE DFHBMPRO TO LABEL1A
           MOVE DFHBMDAR TO LABEL2A
        WHEN OTHER
           MOVE 'ERROR PROCESSING FILE' TO MSG1O
    END-EVALUATE.
SEND-DETAIL-MAP.
    PERFORM DATE-TIME-PARA.
    EXEC CICS SEND
        MAP('DETMAP')
        MAPSET('P01AS04')
        FROM(DETMAPO)
        CURSOR
        ERASE
    END-EXEC.
PROCESS-DETMAP-PARA.
    EVALUATE EIBAID
        WHEN DFHPF2
           IF PROCESS-ADD
              PERFORM ADD-PARA
           ELSE
              MOVE 'PF2 NOT ENABLED' TO MSG2O
           END-IF
        WHEN DFHPF3
           SET PROCESS-KEYMAP TO TRUE
        WHEN DFHPF4
           IF PROCESS-UPD-DEL
              PERFORM UPDATE-PARA
           ELSE
              MOVE 'PF4 NOT ENABLED' TO MSG2O
           END-IF
        WHEN DFHPF5
           IF PROCESS-UPD-DEL
              PERFORM DELETE-PARA
           ELSE
              MOVE 'PF5 NOT ENABLED' TO MSG2O
           END-IF
        WHEN OTHER
           MOVE 'INVALID KEY PRESSED' TO MSG2O
    END-EVALUATE.
RECEIVE-DETAIL-MAP.
    EXEC CICS RECEIVE
        MAP('DETMAP')
        MAPSET('P01AS04')
        INTO(DETMAPI)
    END-EXEC.
DELETE-PARA.
    EXEC CICS DELETE
        FILE('P01AFILE')
        RIDFLD(WS-EMP-ID)
        RESP(WS-RESP-CODE)
    END-EXEC
    EVALUATE WS-RESP-CODE
        WHEN DFHRESP(NORMAL)
           MOVE 'DELETE SUCCESSFUL' TO MSG1O
        WHEN OTHER
           MOVE 'DELETE NOT SUCCESSFUL' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.
ADD-PARA.
    PERFORM RECEIVE-DETAIL-MAP
    PERFORM VALIDATE-PARA
    IF VALID-DATA
       PERFORM MOVE-PARA
       PERFORM WRITE-PARA
    END-IF.
WRITE-PARA.
    EXEC CICS WRITE
        FILE('P01AFILE')
        RIDFLD(WS-EMP-ID)
        FROM (MASTER-RECORD)
        RESP(WS-RESP-CODE)
    END-EXEC
    EVALUATE WS-RESP-CODE
        WHEN DFHRESP(NORMAL)
           MOVE 'ADD SUCCESSFUL' TO MSG1O
        WHEN OTHER
           MOVE 'ADD NOT SUCCESSFUL' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.
UPDATE-PARA.
    PERFORM RECEIVE-DETAIL-MAP
    PERFORM VALIDATE-PARA
    IF VALID-DATA
       PERFORM REWRITE-PARA
    END-IF.
REWRITE-PARA.
    EXEC CICS READ
        FILE('P01AFILE')
        RIDFLD(WS-EMP-ID)
        INTO(MASTER-RECORD)
        RESP(WS-RESP-CODE)
        UPDATE
    END-EXEC
    EVALUATE WS-RESP-CODE
        WHEN DFHRESP(NORMAL)
           PERFORM MOVE-PARA
           EXEC CICS REWRITE
               FILE('P01AFILE')
               FROM(MASTER-RECORD)
               RESP(WS-RESP-CODE)
           END-EXEC
           EVALUATE WS-RESP-CODE
             WHEN DFHRESP(NORMAL)
                MOVE 'UPDATE SUCCESSFUL' TO MSG1O
             WHEN OTHER
                MOVE 'UPDATE NOT SUCCESSFUL' TO MSG1O
           END-EVALUATE
        WHEN OTHER
           MOVE 'ERROR PROCESSING FILE' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.
VALIDATE-PARA.
    MOVE 'Y' TO WS-VALID-FLAG.
MOVE-PARA.
    MOVE WS-EMP-ID             TO EMP-ID
    MOVE NAMEI                 TO EMP-NAME
    MOVE LOCI                  TO EMP-LOC
    MOVE TECHI                 TO EMP-TECH
    MOVE DOBDDI                TO EMP-DOB(7:2)
    MOVE DOBMMI                TO EMP-DOB(5:2)
    MOVE DOBYYI                TO EMP-DOB(1:4)
    MOVE EARNRSI               TO WS-AMT-RS
    MOVE EARNPSI               TO WS-AMT-PS
    MOVE WS-AMOUNT             TO EMP-EARN
    MOVE DEDNRSI               TO WS-AMT-RS      ****************************
    MOVE DEDNPSI               TO WS-AMT-PS       ****************************
    MOVE WS-AMOUNT             TO EMP-DEDN.
DATE-TIME-PARA.
    EXEC CICS ASKTIME
        ABSTIME(WS-DATE-TIME)
    END-EXEC
    EXEC CICS FORMATTIME
        ABSTIME(WS-DATE-TIME)
        DDMMYYYY(DATE1O)
        DATESEP
        TIME(TIME1O)
        TIMESEP
    END-EXEC
    MOVE DATE1O TO DATE2O
    MOVE TIME1O TO TIME2O.
